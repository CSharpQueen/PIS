@using PPIS.Models;
@model PPIS.Models.Issue

@{
    ViewBag.Title = "Edit";
}
<br />
<h2>Izmjena zahtjeva</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @if (User.IsInRole("Event") || User.IsInRole("ProblemManager"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProblemId, "ProblemId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">         
                    @Html.DropDownListFor(m => m.ProblemId, new SelectList(ViewBag.Problems, "Id", "Naziv"), "Nije pridružen problemu", htmlAttributes: new { @class = "form-control" })           
                    @*@Html.DropDownList("ProblemId",new IEnumerable<SelectList>(ViewBag.Problems), htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.ProblemId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    

        @{ // you can put the following in a back-end method and pass through ViewBag
            var selectList = Enum.GetValues(typeof(StatusProblema))
                                 .Cast<StatusProblema>()
                                 .Where(e => e == StatusProblema.Poslan || e == StatusProblema.PonovoOtvoren)
                                 .Select(e => new SelectListItem
                                 {
                                     Value = ((int)e).ToString(),
                                     Text = e.ToString()
                                 });
        }
       

        <div class="form-group">
            @Html.LabelFor(model => model.StatusProblema, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
@if (User.IsInRole("User"))
{
                @Html.DropDownListFor(m => m.StatusProblema, selectList, htmlAttributes: new { @class = "form-control" })
} else {               @Html.EnumDropDownListFor(model => model.StatusProblema, htmlAttributes: new { @class = "form-control" })}
                @Html.ValidationMessageFor(model => model.StatusProblema, "", new { @class = "text-danger" })
 </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatumPodnosenja, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumPodnosenja, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumPodnosenja, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NazivProblema, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NazivProblema, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NazivProblema, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpisProblema, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpisProblema, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpisProblema, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.PrioritetProblema, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PrioritetProblema, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrioritetProblema, "", new { @class = "text-danger" })
            </div>
        </div>

        
        
        <div class="form-group">
            @Html.LabelFor(model => model.Komentar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Komentar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Komentar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sačuvaj" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Nazad", "Index")
</div>
